spring.application.name=cuentacliente

#Puerto de aplicación
server.port=8080

#Configuraciones para conexión hacía la DB
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/pruebabackend
spring.datasource.username=postgres
spring.datasource.password=qwerty
#spring.jpa.hibernate.ddl-auto:update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Configurando estructura de log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

#Configurando consumo y producer de kafka y su conexión con el servidor
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=transaccionId
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Topic KAFKA
app.kafka.topic=test-topic

# Url base para consumir APIs en JSF
app.url.base=http://localhost:8080/transaccion


# JSF en Spring Boot
#server.servlet.context-path=/
#server.servlet.register-default-servlet=true


# Definiendo URL base para acceder a swagger
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html






